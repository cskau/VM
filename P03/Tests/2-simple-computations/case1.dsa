(DAIMI-SchemeE03
  (0 2 1)
  ((1 lambda-deep%0))
  ((load close-deep 0 tmp 0)
   (new-vec 2)
   (load sym baz vec 0)
   (load sym foo vec 1)
   (call lib 40 1)
   (move res 0 tmp 1)
   (jump-if-false tmp 1 else%1)
   (new-vec 1)
   (load bool 1 vec 0)
   (tail-call tmp 0)
   (label else%1)
   (new-vec 2)
   (load sym baz vec 0)
   (load sym bar vec 1)
   (call lib 40 1)
   (move res 0 tmp 1)
   (jump-if-false tmp 1 else%2)
   (new-vec 1)
   (load bool 1 vec 0)
   (tail-call tmp 0)
   (label else%2)
   (new-vec 2)
   (load sym baz vec 0)
   (load sym baz vec 1)
   (call lib 40 1)
   (move res 0 tmp 1)
   (new-vec 1)
   (move tmp 1 vec 0)
   (tail-call tmp 0)

   (label lambda-deep%0)
   (jump-if-false 0 0 else%3)
   (load sym OK res 0)
   (return)
   (label else%3)
   (load sym KO res 0)
   (return))
  "DAIMI-Scheme compiler, 03-10-22")
