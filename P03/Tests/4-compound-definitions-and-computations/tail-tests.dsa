(DAIMI-SchemeE03
  (2 4 1)
  ((2 lambda-deep%0)
   (-1 lambda-deep%1)
   (1 lambda-deep%2)
   (1 lambda-deep%3))
  ((load close-deep 0 glo 0)
   (load close-deep 1 glo 1)
   (new-vec 2)
   (load bool 0 vec 0)
   (load bool 0 vec 1)
   (call glo 0 0)
   (move res 0 tmp 0)
   (new-vec 2)
   (load bool 0 vec 0)
   (load bool 1 vec 1)
   (call glo 0 1)
   (move res 0 tmp 1)
   (new-vec 2)
   (load bool 1 vec 0)
   (load bool 0 vec 1)
   (call glo 0 2)
   (move res 0 tmp 2)
   (new-vec 2)
   (load bool 1 vec 0)
   (load bool 1 vec 1)
   (call glo 0 3)
   (move res 0 tmp 3)
   (new-vec 4)
   (move tmp 0 vec 0)
   (move tmp 1 vec 1)
   (move tmp 2 vec 2)
   (move tmp 3 vec 3)
   (tail-call glo 1)

   (label lambda-deep%0)
   (new-vec 0)
   (extend)
   (load close-deep 2 tmp 0)
   (jump-if-false 1 0 else%5)
   (new-vec 1)
   (load int 1 vec 0)
   (tail-call tmp 0)
   (label else%5)
   (new-vec 1)
   (load int 2 vec 0)
   (tail-call tmp 0)

   (label lambda-deep%1)
   (move 0 0 res 0)
   (return)

   (label lambda-deep%2)
   (new-vec 0)
   (extend)
   (load close-deep 3 tmp 0)
   (jump-if-false 3 1 else%6)
   (new-vec 1)
   (load int 10 vec 0)
   (tail-call tmp 0)
   (label else%6)
   (new-vec 1)
   (load int 20 vec 0)
   (tail-call tmp 0)

   (label lambda-deep%3)
   (new-vec 2)
   (move 2 0 vec 0)
   (move 0 0 vec 1)
   (tail-call lib 1))
  "DAIMI-Scheme compiler, 03-10-22")
