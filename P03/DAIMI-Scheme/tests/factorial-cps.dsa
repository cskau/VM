(DAIMI-SchemeE03
  (1 2 1)
  ((1 lambda-deep%0)
   (2 lambda-deep%1)
   (1 lambda-flat%2)
   (1 lambda-flat%3))
  ((load close-deep 0 glo 0)
   (new-vec 1)
   (load int 5 vec 0)
   (tail-call glo 0)

   (label lambda-deep%0)
   (new-vec 1)
   (extend)
   (load close-deep 1 0 0)
   (new-vec 0)
   (load close-flat 2 tmp 0)
   (new-vec 2)
   (move 1 0 vec 0)
   (move tmp 0 vec 1)
   (tail-call 0 0)

   (label lambda-deep%1)
   (new-vec 2)
   (move 0 0 vec 0)
   (load int 0 vec 1)
   (call lib 8 0)
   (move res 0 tmp 0)
   (jump-if-false tmp 0 else%6)
   (new-vec 1)
   (load int 1 vec 0)
   (tail-call 0 1)
   (label else%6)
   (new-vec 2)
   (move 0 0 vec 0)
   (load int 1 vec 1)
   (call lib 2 0)
   (move res 0 tmp 0)
   (new-vec 2)
   (move 0 1 vec 0)
   (move 0 0 vec 1)
   (load close-flat 3 tmp 1)
   (new-vec 2)
   (move tmp 0 vec 0)
   (move tmp 1 vec 1)
   (tail-call 1 0)

   (label lambda-flat%2)
   (move 0 0 res 0)
   (return)

   (label lambda-flat%3)
   (new-vec 2)
   (move 0 0 vec 0)
   (move 1 1 vec 1)
   (call lib 3 0)
   (move res 0 tmp 0)
   (new-vec 1)
   (move tmp 0 vec 0)
   (tail-call 1 0))
  "DAIMI-Scheme compiler, 03-10-10")
