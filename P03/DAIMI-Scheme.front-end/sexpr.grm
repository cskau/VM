(* -*- sml -*- ------------------------------------------- *)
(* sexpr.grm                                               *)
(* Grammar of Sexpressions.  ML-Yacc specification.        *)
(* dOvs 03  -  Mads Sig Ager                               *)
(* ------------------------------------------------------- *)

fun build_list (nil)
    = Sexpr.NIL
  | build_list (sexpr :: sexprs)
    = Sexpr.PAIR (sexpr, build_list sexprs)

%%

%name Sexp

%header (functor SynLrValsFun(structure Token: TOKEN
			      structure Sexpr : SEXPR))

%term EOF | SYMBOL of string | STRING of string | LPAREN 
    | RPAREN | NUMERAL of int | FALSE | TRUE | CHARACTER of char 
    | QUOTE | RBRACKET | LBRACKET 
    
%nonterm program of Sexpr.program 
       | sexprlist of Sexpr.sexpr list
       | sexpr of Sexpr.sexpr

%start program
%pos int * int
%pure    (* don't delay semantic actions *)
%verbose (* print debugging info *)
%eop EOF

%noshift EOF

%%

program : sexprlist
          (sexprlist)

sexprlist : sexpr sexprlist
          (sexpr :: sexprlist)
	  | (* empty *)
	  (nil)

sexpr : STRING
      (Sexpr.STRING STRING)	  
      | TRUE
      (Sexpr.BOOLEAN true)
      | FALSE
      (Sexpr.BOOLEAN false)
      | NUMERAL
      (Sexpr.INTEGER NUMERAL)
      | CHARACTER
      (Sexpr.CHARACTER CHARACTER)
      | SYMBOL
      (Sexpr.SYMBOL SYMBOL)
      | LPAREN sexprlist RPAREN
      (build_list sexprlist)
      | LBRACKET sexprlist RBRACKET
      (build_list sexprlist)
      | QUOTE sexpr
      (Sexpr.PAIR (Sexpr.SYMBOL "quote", Sexpr.PAIR (sexpr, Sexpr.NIL)))

(* end of sexpr.grm *)
